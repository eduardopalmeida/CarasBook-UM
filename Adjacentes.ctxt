#BlueJ class context
comment0.params=
comment0.target=Adjacentes()
comment0.text=\r\n\ Construtor\ por\ omissao\r\n
comment1.params=ac
comment1.target=Adjacentes(AdjacenteComparator)
comment1.text=\r\n\ Construtor\ com\ comparator\r\n
comment10.params=
comment10.target=java.util.Iterator\ getIterator()
comment11.params=
comment11.target=Adjacentes\ clone()
comment12.params=a
comment12.target=boolean\ Equals(Adjacentes)
comment13.params=
comment13.target=java.lang.String\ toString()
comment2.params=ad
comment2.target=Adjacentes(Adjacentes)
comment2.text=\r\n\ Construtor\ para\ clone\r\n
comment3.params=ad
comment3.target=Adjacentes(java.util.TreeSet)
comment3.text=\r\n\ Construtor\ por\ partes\r\n
comment4.params=
comment4.target=java.util.TreeSet\ getAdjacentes()
comment5.params=ad
comment5.target=void\ setAdjacentes(java.util.TreeSet)
comment6.params=
comment6.target=java.util.ArrayList\ devolveList()
comment6.text=\r\n\ \r\n
comment7.params=indice
comment7.target=Adjacente\ getAdjacente(int)
comment7.text=\r\n\ Devolve\ um\ adjacente\ dado\ o\ seu\ indice\r\n\ \r\n
comment8.params=ad
comment8.target=boolean\ addAdjacente(Adjacente)
comment8.text=\r\n\ Adicona\ um\ adjacente\r\n\ \r\n\ @return\ Boleano\ que\ indica\ se\ a\ insercao\ foi\ bem\ sucedida\r\n
comment9.params=indice
comment9.target=double\ getDist(int)
numComments=14
