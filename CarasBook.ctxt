#BlueJ class context
comment0.params=
comment0.target=CarasBook()
comment0.text=\n\ Constructor\ por\ omissao\n
comment1.params=cb
comment1.target=CarasBook(CarasBook)
comment1.text=\n\ Constructor\ para\ clone\n
comment10.params=emailU\ m
comment10.target=void\ addMuralU(java.lang.String,\ Mencacao)
comment10.text=\n\ Adiciona\ mensagem\ no\ proprio\ mural\ e\ no\ dos\ amigos\n
comment11.params=
comment11.target=CarasBook\ clone()
comment12.params=
comment12.target=java.lang.String\ toString()
comment13.params=ob
comment13.target=boolean\ equals(java.lang.Object)
comment14.params=fich
comment14.target=void\ gravaObj(java.lang.String)
comment2.params=
comment2.target=java.util.TreeMap\ getUtilizadores()
comment3.params=ut
comment3.target=void\ setUtilizadores(java.util.TreeMap)
comment4.params=email\ password
comment4.target=Utilizador\ login(java.lang.String,\ java.lang.String)
comment5.params=
comment5.target=java.util.ArrayList\ giveUtilizadores()
comment6.params=str
comment6.target=Utilizador\ get(java.lang.String)
comment6.text=\n\ \n
comment7.params=ut
comment7.target=boolean\ addUtilizador(Utilizador)
comment7.text=\n\ Adiciona\ um\ utilizador\ dado\ um\ utilizador\n
comment8.params=emailU\ emailA
comment8.target=void\ envPedAmig(java.lang.String,\ java.lang.String)
comment8.text=\n\ Envia\ um\ pedido\ de\ amizade\ \n\ \n\ @param\ emailU\ e-mail\ do\ utilizador\ a\ que\ se\ esta\ a\ pedir\ amizade\n\ @param\ emailA\ e-amil\ do\ utilizador\ que\ pediu\ a\ amizade\n
comment9.params=email1\ email2
comment9.target=int\ nivelEntre(java.lang.String,\ java.lang.String)
comment9.text=\n\ Calcula\ nivel\ entre\ dois\ utilizadores\n
numComments=15
